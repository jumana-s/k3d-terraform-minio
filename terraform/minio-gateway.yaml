nameOverride: "minio-gateway"
commonLabels:
  app: minio-gateway
auth:
  existingSecret: minio-gateway-secret
gateway:
  enabled: true
  replicaCount: 1
  type: s3
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: "25%"
  auth:
    existingSecret: minio-gateway-secret
    s3:
      accessKey: "minioadmin"
      secretKey: "minioadmin"
      serviceEndpoint: http://minio.minio:9000
extraEnvVars:
  - name: AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: minio
        key: root-user
  - name: AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: minio
        key: root-password
  - name: MINIO_IDENTITY_OPENID_CONFIG_URL
    valueFrom:
      secretKeyRef:
        name: minio-oidc-config
        key: MINIO_IDENTITY_OPENID_CONFIG_URL
  - name: MINIO_IDENTITY_OPENID_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: minio-oidc-config
        key: MINIO_IDENTITY_OPENID_CLIENT_ID
  - name: MINIO_IDENTITY_OPENID_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: minio-oidc-config
        key: MINIO_IDENTITY_OPENID_CLIENT_SECRET
  - name: MINIO_IDENTITY_OPENID_REDIRECT_URI
    valueFrom:
      secretKeyRef:
        name: minio-oidc-config
        key: MINIO_IDENTITY_OPENID_REDIRECT_URI
  - name: MINIO_IAM_OPA_URL
    value: http://opa:8181/v1/data/httpapi/authz
  # - name: MINIO_ETCD_ENDPOINTS
  #   value: http://etcd:2379/

ingress:
  enabled: false
resources: {}
tolerations: []
